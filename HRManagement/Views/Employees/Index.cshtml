@using HRManagement.ViewModels.Employee
@using Microsoft.Ajax.Utilities
@model HRManagement.ViewModels.Employee.EmployeeIndexViewModel

@{
    ViewBag.Title = "Index";
}


@Html.ActionLink("New", "Create", null, new { @class = "btn btn-default" })

<button onclick="window.location='/Employees/ExportEmployees';" class="btn btn-default">Export to Excel</button>

<h2>List of employees</h2>

<table class="table table-striped table-responsive">
    <tr>
        <th></th>
        <th>
            @Html.DisplayName("FullName")
        </th>
        <th>
            @Html.DisplayName("Position")
        </th>
        <th>
            @Html.DisplayName("Project")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Employees)
    {
        <tr>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btn-sm" })
                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm" })
                @Html.ActionLink("Assign trainings", "Index", new EmployeeAssignTrainingTrigger { ExpandTrainings = true, EmployeeId = item.Id }, new { @class = "btn btn-success btn-sm" })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
        </tr>
    }
</table>

@if (Model.EmployeeAssignTrainingsTrigger != null)
{
    using (Html.BeginForm("AssignTrainingsToEmployee", "Employees", FormMethod.Post))
    {
        for (var i = 0; i < Model.Trainings.Count(); i++)
        {
            <input type="text" style="display:none" name="Training[@i].Id" value="@Model.Trainings.ElementAt(i).Id" />
            <input type="checkbox" name="Training[@i].Checked" value="@Model.Employees.First(x=>x.Id == @Model.EmployeeAssignTrainingsTrigger.EmployeeId).Trainings.Select(x=>x.Id).Contains(training.Id)" />
        }
        <input type="number" name="EmployeeId" value="@Model.EmployeeAssignTrainingsTrigger.EmployeeId"/>
        <input type="submit" class="btn btn-default" value="Assign Trainings" />
    }
}